#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "courier" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 0.8in
\rightmargin 1in
\bottommargin 0.8in
\headheight 0cm
\headsep 0cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\align center

\size larger
CSCE 221 Cover Page
\end_layout

\begin_layout Standard
\align center

\size larger
Homework #1 
\end_layout

\begin_layout Standard
\align center

\series bold
\size large
Due September 14 at midnight to eCampus
\series default
\size larger

\begin_inset VSpace bigskip
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
First Name
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Rong
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Last Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Xu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

UIN
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

928009312
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
User Name 
\begin_inset space ~
\end_inset

 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Abby-xu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

E-mail address
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

rongx0915@tamu.edu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\size default

\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
Please list all sources in the table below including web pages which you
 used to solve or implement the current homework.
 If you fail to cite sources you can get a lower number of points or even
 zero, read more: 
\begin_inset CommandInset href
LatexCommand href
name "Aggie Honor System Office"
target "http://aggiehonor.tamu.edu/"
literal "false"

\end_inset

 
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="15" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
People
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web pages (provide URL) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Printed material
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Other Sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
I certify that I have listed all the sources that I used to develop the
 solutions/codes to the submitted work.
\end_layout

\begin_layout Quotation
“
\emph on
On my honor as an Aggie, I have neither given nor received any unauthorized
 help on this academic work.
\emph default
” 
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.5cm
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Your Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Rong
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Xu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

2020/09/13
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
Homework 1 Objectives:
\end_layout

\begin_layout Enumerate
Developing the C++ programming skills by using
\end_layout

\begin_deeper
\begin_layout Enumerate
templated dynamic arrays and STL vectors.
\end_layout

\begin_layout Enumerate
exceptions for reporting the logical errors or unsuccessful operations.
\end_layout

\begin_layout Enumerate
tests for checking correctness of a program.
\end_layout

\end_deeper
\begin_layout Enumerate
Comparing theory with a computation experiment in order to classify algorithm.
\end_layout

\begin_layout Enumerate
Preparing reports/documents using the professional software \SpecialChar LyX
 or \SpecialChar LaTeX
.
\end_layout

\begin_layout Enumerate
Understanding the definition of the big-O asymptotic notation.
\end_layout

\begin_layout Enumerate
Classifying algorithms based on pseudocode.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left

\series bold
Type solutions to the homework problems listed below using preferably \SpecialChar LyX
/\SpecialChar LaTeX

 word processors, see the class webpage for more information about their
 installation and tutorials.
 
\end_layout

\begin_layout Enumerate
(25 points) Use the STL class 
\family typewriter
vector<int>
\family default
 to write a C++ function that returns true if there are two elements of
 the vector for which their product is odd, and returns false otherwise.
 Provide two algorithms for solving this problem with the efficiency of
 
\begin_inset Formula $O(n)$
\end_inset

 for the first one and 
\begin_inset Formula $O(n^{2})$
\end_inset

 for the second one where 
\begin_inset Formula $n$
\end_inset

 is the size of the vector.
\end_layout

\begin_deeper
\begin_layout Standard
Justify your answer by writing the running time functions in terms of 
\begin_inset Formula $n$
\end_inset

 for both the algorithms.
 
\end_layout

\begin_layout Itemize
What do you consider as an operation for each algorithm? 
\end_layout

\begin_layout Itemize
Are the best and worst cases for both the algorithms the same in terms of
 Big-O notation? Justify your answer.
 
\end_layout

\begin_layout Itemize
Describe the situations of getting the best and worst cases, give the samples
 of the input for each case and check if your running time functions match
 the number of operations.sfvsf
\end_layout

\begin_deeper
\begin_layout Itemize
An operation such as a if statement, add the value at a varaible...
 For a for loop of n elements, the operations of this for loop is n if there
 isn't any more nested for loop.
 If there is a nested for loop in a for loop, (let the first for loop includes
 n elements and the second for loop includes m elements, then we have m
 * n operations for this system.)
\end_layout

\begin_layout Itemize
Solution 1: code for 
\begin_inset Formula $O(n)$
\end_inset

......
\begin_inset listings
lstparams "language={C++},basicstyle={\small\ttfamily}"
inline false
status open

\begin_layout Plain Layout

bool if_Product_odd (vector<int> &v) {
\end_layout

\begin_layout Plain Layout

	
\backslash

\backslash
 The product of two elements is odd if and only if both two elements are
 odd
\end_layout

\begin_layout Plain Layout

	
\backslash

\backslash
 For example, 3 * 5 = 15 is odd; 5 * 6 = 30 is even; 6 * 8 = 48 is even
\end_layout

\begin_layout Plain Layout

	bool if_odd = false;
\end_layout

\begin_layout Plain Layout

	int count = 0, operation = 0; 
\backslash

\backslash
 Set a integer named operation for testing
\end_layout

\begin_layout Plain Layout

	for (int i = 0; i < v.size(); i++) {
\end_layout

\begin_layout Plain Layout

		if (v.at(i) % 2 == 1) count++;
\end_layout

\begin_layout Plain Layout

		operation++;
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	if (count >= 2) if_odd = true;
\end_layout

\begin_layout Plain Layout

	cout << 
\begin_inset Quotes eld
\end_inset

The operation of this algorithm is 
\begin_inset Quotes erd
\end_inset

 << operation << endl;
\end_layout

\begin_layout Plain Layout

	return if_odd;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The best case of this algorithm is 
\begin_inset Formula $O(n)$
\end_inset

, and as same as the worst case and average case.
\end_layout

\begin_layout Itemize
Test cases:
\end_layout

\begin_deeper
\begin_layout Itemize
Input vector_1 = [1, 3] for best case, the operation is 2;
\end_layout

\begin_layout Itemize
Input vector_2 = [2, 4, 6, 7, 9] for worst case, the operation is 5;
\end_layout

\begin_layout Itemize
As two test cases above, both of the best case and worst case have the same
 in terms of Big-O notation.
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Solution 2: code for 
\begin_inset Formula $O(n^{2})$
\end_inset

......
\begin_inset listings
lstparams "language={C++},basicstyle={\small\ttfamily},showstringspaces=false"
inline false
status open

\begin_layout Plain Layout


\backslash

\backslash
 Version_1
\end_layout

\begin_layout Plain Layout

bool if_Product_odd (vector<int> &v) {
\end_layout

\begin_layout Plain Layout

	
\backslash

\backslash
The product of two elements is odd 
\end_layout

\begin_layout Plain Layout

	
\backslash

\backslash
if and only if both two elements are odd
\end_layout

\begin_layout Plain Layout

	bool if_odd = false;
\end_layout

\begin_layout Plain Layout

	int operation = 0; 
\backslash

\backslash
 Set a integer named operation for testing
\end_layout

\begin_layout Plain Layout

	for (int i = 0; i < v.size(); i++) {
\end_layout

\begin_layout Plain Layout

		for (int j = 0; j < v.size() - 1; j++) {
\end_layout

\begin_layout Plain Layout

			if (v.at(i) % 2 == 1 && v.at(j) % 2 == 1) {
\end_layout

\begin_layout Plain Layout

				if_odd = true;
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

			operation++;
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	cout << 
\begin_inset Quotes eld
\end_inset

The operation of this algorithm is 
\begin_inset Quotes erd
\end_inset

 << operation << endl;
\end_layout

\begin_layout Plain Layout

	return if_odd;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash

\backslash
 Version_2
\end_layout

\begin_layout Plain Layout

bool if_Product_odd (vector<int> &v) {
\end_layout

\begin_layout Plain Layout

	
\backslash

\backslash
The product of two elements is odd 
\end_layout

\begin_layout Plain Layout

	
\backslash

\backslash
if and only if both two elements are odd
\end_layout

\begin_layout Plain Layout

	int operation = 0; 
\backslash

\backslash
 Set a integer named operation for testing
\end_layout

\begin_layout Plain Layout

	for (int i = 0; i < v.size(); i++) {
\end_layout

\begin_layout Plain Layout

		for (int j = 0; j < v.size(); j++) {
\end_layout

\begin_layout Plain Layout

			operation++;
\end_layout

\begin_layout Plain Layout

			if (i != j && v.at(i) % 2 == 1 && v.at(j) % 2 == 1) {
\end_layout

\begin_layout Plain Layout

				cout << 
\begin_inset Quotes eld
\end_inset

The operation of this algorithm is 
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Plain Layout

					<< operation << endl;
\end_layout

\begin_layout Plain Layout

				return true;
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	return false;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The best case of this algorithm is 
\begin_inset Formula $O(1)$
\end_inset

; the worst case of this algorithm is 
\begin_inset Formula $O(n^{2})$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
Input vector_1 = [1, 3] for best case, the operation is 2 for version_1,
 1 for version_2; 
\end_layout

\begin_layout Itemize
Input vector_2 = [2, 4, 6, 7, 9] for worst case, the operation is 20 for
 both version_1 and version_2;
\end_layout

\begin_layout Itemize
Big-O for best case and worst case depends on different version of code.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(50 points) The binary search algorithm problem.
\end_layout

\begin_deeper
\begin_layout Enumerate
(5 points) Implement a templated C++ function for the binary search algorithm
 based on the set of the lecture slides
\shape italic
 
\begin_inset Quotes eld
\end_inset

Analysis of Algorithms
\begin_inset Quotes erd
\end_inset


\shape default
.
\end_layout

\begin_deeper
\begin_layout Standard

\size small
\begin_inset listings
lstparams "language={C++},basicstyle={\small\ttfamily},showstringspaces=false"
inline false
status open

\begin_layout Plain Layout

int Binary_Search(vector<int> &v, int x) {
\end_layout

\begin_layout Plain Layout

   int mid, low = 0;     
\end_layout

\begin_layout Plain Layout

   int high = (int) v.size()-1;     
\end_layout

\begin_layout Plain Layout

   while (low < high) {         
\end_layout

\begin_layout Plain Layout

      mid = (low+high)/2;                 
\end_layout

\begin_layout Plain Layout

      if (num_comp++, v[mid] < x) low = mid+1;         
\end_layout

\begin_layout Plain Layout

      else high = mid;     
\end_layout

\begin_layout Plain Layout

   }     
\end_layout

\begin_layout Plain Layout

   if (num_comp++, x == v[low]) return low; //OK: found          
\end_layout

\begin_layout Plain Layout

   throw Unsuccessful_Search(); //exception: not found 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Be sure that before calling 
\family typewriter
Binary_Search
\family default
 elements of the vector 
\family typewriter
v
\family default
 are arranged in increasing order.
 The function should also keep track of the number of comparisons used to
 find the target 
\family typewriter
x
\family default
.
 The (global) variable 
\family typewriter
num_comp
\family default
 keeps the number of comparisons and initially should be set to zero.
\begin_inset listings
lstparams "language={C++},basicstyle={\small\ttfamily}"
inline false
status open

\begin_layout Plain Layout

#include <iostream> 
\end_layout

\begin_layout Plain Layout

#include <vector> 
\end_layout

\begin_layout Plain Layout

#include<math.h>
\end_layout

\begin_layout Plain Layout

using namespace std; 
\end_layout

\begin_layout Plain Layout

int num_comp = 0;
\end_layout

\begin_layout Plain Layout

int Binary_Search(vector<int> &v, int x) {    
\end_layout

\begin_layout Plain Layout

	int mid, low = 0;         
\end_layout

\begin_layout Plain Layout

	int high = (int) v.size()-1;         
\end_layout

\begin_layout Plain Layout

	while (low < high) {                
\end_layout

\begin_layout Plain Layout

		mid = (low+high)/2;                        
\end_layout

\begin_layout Plain Layout

		if (num_comp++, v[mid] < x) low = mid+1;                
\end_layout

\begin_layout Plain Layout

		else high = mid;         }         
\end_layout

\begin_layout Plain Layout

	if (num_comp++, x == v[low]) return low; //OK: found              
\end_layout

\begin_layout Plain Layout

	throw "sth wrong..."; // Unsuccessful_Search(); //exception: not found  
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

int main() { 	
\end_layout

\begin_layout Plain Layout

	vector<int> v; 	
\end_layout

\begin_layout Plain Layout

	int k; 	
\end_layout

\begin_layout Plain Layout

	cin >> k; 	
\end_layout

\begin_layout Plain Layout

	int n = pow(2, k) - 1; 	
\end_layout

\begin_layout Plain Layout

	cout << "The number of vector: " << n; 	
\end_layout

\begin_layout Plain Layout

	for (int i = 0; i < n; i++)		
\end_layout

\begin_layout Plain Layout

		v.push_back(i); 		
\end_layout

\begin_layout Plain Layout

	cout << "Last element: " << v.at(n - 1) << endl; 	
\end_layout

\begin_layout Plain Layout

	cout << "position: " << Binary_Search(v, n - 1); 	
\end_layout

\begin_layout Plain Layout

	cout << "
\backslash
n" << "num_comp: " << num_comp; 	
\end_layout

\begin_layout Plain Layout

	return 0; 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(10 points) Test your algorithm for correctness using a vector of data with
 16 elements sorted in ascending order.
 An exception should be thrown when the input vector is unsorted or the
 search is unsuccessful.
 
\begin_inset Newline newline
\end_inset

What is the value of 
\family typewriter
num_comp
\family default
 in the cases when 
\end_layout

\begin_deeper
\begin_layout Enumerate
the target 
\family typewriter
x
\family default
 is the first element of the vector 
\family typewriter
v
\end_layout

\begin_deeper
\begin_layout Enumerate
5
\end_layout

\end_deeper
\begin_layout Enumerate
the target 
\family typewriter
x
\family default
 is the last element of the vector 
\family typewriter
v
\end_layout

\begin_deeper
\begin_layout Enumerate
5
\end_layout

\end_deeper
\begin_layout Enumerate
the target 
\family typewriter
x
\family default
 is in the middle of the vector 
\family typewriter
v
\end_layout

\begin_deeper
\begin_layout Enumerate
5
\end_layout

\end_deeper
\begin_layout Standard
What is your conclusion from the testing for 
\begin_inset Formula $n=16$
\end_inset

?
\end_layout

\begin_layout Enumerate
In conclusion, whatever index is, the number of comparison will always be
 5
\end_layout

\end_deeper
\begin_layout Enumerate
(10 points) Test your program using vectors of size 
\begin_inset Formula $n=2^{k}$
\end_inset

 where 
\begin_inset Formula $k=0,\,1,2,\dots,11$
\end_inset

 populated with consecutive increasing integers in these ranges: 
\begin_inset Formula $1,\,2,\,4,\,8,\,16,\,32,\,64,\,128,\,256,\,512,\,1024,\,2048$
\end_inset

.
 Select the target as the last element in the vector.
 Record the value of 
\family typewriter
num_comp
\family default
 for each vector size in the table below.
 
\end_layout

\begin_deeper
\begin_layout Standard

\series bold
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Range [1,
\begin_inset Formula $n$
\end_inset

]
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none" width="2cm">
\begin_inset Text

\begin_layout Plain Layout
Target 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none" width="2cm">
\begin_inset Text

\begin_layout Plain Layout
# comp.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[1, 1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[1, 2]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[1, 4]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[1, 8]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[1, 16]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[1, 2048]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2048
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(5 points) Plot the number of comparisons for the vector size 
\begin_inset Formula $n=2^{k}$
\end_inset

, 
\begin_inset Formula $k=1,2,\dots,11$
\end_inset

.
 You can use a spreadsheet or any graphical package.
 Include graphs for each case.
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Graphics
	filename pasted1.png
	lyxscale 60
	scale 50

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(5 points) Provide a mathematical formula/function which takes 
\begin_inset Formula $n$
\end_inset

 as an argument, where 
\begin_inset Formula $n$
\end_inset

 is the vector size and returns as its value the number of comparisons.
 Does your formula match the computed output for any input? Justify your
 answer.
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $f(n)=log_{2}n+1$
\end_inset

 
\end_layout

\begin_layout Enumerate
Yes, the fomula matches the computed output for any input.
 For example, when n = 4, this function will return 3, which matches the
 fomula I got.
\end_layout

\end_deeper
\begin_layout Enumerate
(5 points) How can you modify your formula/function if the largest number
 in a vector is not the exact power of two? Test your program using input
 in ranges from 
\begin_inset Formula $1$
\end_inset

 to 
\begin_inset Formula $2^{k}-1,\,\,k=1,2,3,\dots,11.$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\series bold
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Range [1,
\begin_inset Formula $n$
\end_inset

]
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none" width="2cm">
\begin_inset Text

\begin_layout Plain Layout
Target 
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none" width="2cm">
\begin_inset Text

\begin_layout Plain Layout
# comp.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[1, 1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[1, 3]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[1, 7]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[1, 15]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[1, 31]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
31
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[1, 2047]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2047
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(5 points) Do you think the number of comparisons in the experiment above
 are the same for a vector of strings or a vector of doubles? Justify your
 answer.
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Yes, I think so.
 The running time of the algorithm itself does not depend on the type of
 inputs.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(5 points) Use the Big-O asymptotic notation to classify binary search algorithm
 and justify your answer.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Enumerate
The Big-O of binary search is O(log n).
 In this case, the base of log is 2.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Enumerate
(Bonus question—10 points) Read the sections 1.6.3 and 1.6.4 from the textbook
 and modify the algorithm using a functional object to compare vector elements.
 How can you modify the binary search algorithm to handle the vector of
 decreasing elements? What will be the value of 
\family typewriter
num_comp
\family default
? Repeat the search experiment for the smallest number in the integer arrays.
 Tabulate the results and write a conclusion of the experiment with your
 justification.
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset listings
lstparams "language={C++},basicstyle={\small\ttfamily}"
inline false
status open

\begin_layout Plain Layout

#include <iostream> 
\end_layout

\begin_layout Plain Layout

#include <vector> 
\end_layout

\begin_layout Plain Layout

#include<math.h>
\end_layout

\begin_layout Plain Layout

using namespace std;
\end_layout

\begin_layout Plain Layout

class Binary_Search { 
\end_layout

\begin_layout Plain Layout

private: 	
\end_layout

\begin_layout Plain Layout

	int num_comp = 0; 	
\end_layout

\begin_layout Plain Layout

	int num_find;
\end_layout

\begin_layout Plain Layout

public: 	
\end_layout

\begin_layout Plain Layout

	std::vector<int> vec; 	
\end_layout

\begin_layout Plain Layout

	// constructor 	
\end_layout

\begin_layout Plain Layout

	Binary_Search(const std::vector<int> &v, int x) : num_find(x) { 		
\end_layout

\begin_layout Plain Layout

		for (int i = 0; i < v.size(); i++) 			
\end_layout

\begin_layout Plain Layout

			vec.push_back(v[i]); 	
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	int Bi_Search() { 		
\end_layout

\begin_layout Plain Layout

		int mid;  		
\end_layout

\begin_layout Plain Layout

		int low = 0;      		
\end_layout

\begin_layout Plain Layout

		int high = (int) vec.size()-1;      	   	
\end_layout

\begin_layout Plain Layout

		while (low < high) { 	      	
\end_layout

\begin_layout Plain Layout

			mid = (low + high) / 2;   	      	
\end_layout

\begin_layout Plain Layout

			cout << "mid: " << mid << endl;                 	      	
\end_layout

\begin_layout Plain Layout

			if (num_comp++, vec[mid] < get_num_find()) high = mid - 1; 	      	
\end_layout

\begin_layout Plain Layout

			else if (vec[mid] == get_num_find()) high = mid;      	      	
\end_layout

\begin_layout Plain Layout

			else low = mid + 1;      	   	}      	   	
\end_layout

\begin_layout Plain Layout

			if (num_comp++, num_find == vec[high]) return high; //OK: found     
      	   	
\end_layout

\begin_layout Plain Layout

			throw "sth wrong..."; // Unsuccessful_Search(); //exception: not found 
 	
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	int get_num_find() const { 		
\end_layout

\begin_layout Plain Layout

		return num_find; 	
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	int get_num_comp() const { 		
\end_layout

\begin_layout Plain Layout

		return num_comp; 	
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	void print_out() { 		
\end_layout

\begin_layout Plain Layout

		for (int i = 0; i < vec.size(); i++) 			
\end_layout

\begin_layout Plain Layout

			cout << vec[i] << endl; 		
\end_layout

\begin_layout Plain Layout

		cout << "finished printing" << endl; 	
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

int main() { 	
\end_layout

\begin_layout Plain Layout

	vector<int> v; 	
\end_layout

\begin_layout Plain Layout

	int k; 	
\end_layout

\begin_layout Plain Layout

	cin >> k; 	
\end_layout

\begin_layout Plain Layout

	int n = pow(2, k); 	
\end_layout

\begin_layout Plain Layout

	cout << "The number of vector: " << n << endl; 	
\end_layout

\begin_layout Plain Layout

	for (int i = n; i >= 1; i--)		
\end_layout

\begin_layout Plain Layout

		v.push_back(i); 	
\end_layout

\begin_layout Plain Layout

	Binary_Search bs(v, n); 	
\end_layout

\begin_layout Plain Layout

	cout << "finished constructor" << endl; 	
\end_layout

\begin_layout Plain Layout

	bs.print_out(); 	
\end_layout

\begin_layout Plain Layout

	bs.Bi_Search(); 	
\end_layout

\begin_layout Plain Layout

	cout << "finished function" << endl; 	
\end_layout

\begin_layout Plain Layout

	cout << bs.get_num_comp() << endl;
\end_layout

\begin_layout Plain Layout

	return 0; 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
(25 points) Find running time functions for the algorithms below and write
 their classification using Big-O asymptotic notation in terms of 
\begin_inset Formula $n$
\end_inset

.
 A running time function should provide a formula on the number of arithmetic
 operations and assignments performed on the variables 
\begin_inset Formula $s$
\end_inset

, 
\begin_inset Formula $t$
\end_inset

, or 
\begin_inset Formula $c$
\end_inset

 (the return value).
 Note that array indices start from 
\begin_inset Formula $0$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout LyX-Code

\series bold
Algorithm
\series default
 Ex1(A):
\end_layout

\begin_layout LyX-Code

\series bold
  Input
\series default
: An array A storing 
\begin_inset Formula $n\geq1$
\end_inset

 integers.
\end_layout

\begin_layout LyX-Code

\series bold
  Output
\series default
: The sum of the elements in A.
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $s\leftarrow A[0]$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
for
\series default
 
\begin_inset Formula $i\leftarrow1$
\end_inset

 to 
\begin_inset Formula $n-1$
\end_inset

 
\series bold
do
\end_layout

\begin_layout LyX-Code
   
\begin_inset Formula $s\leftarrow s+A[i]$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
end for
\end_layout

\begin_layout LyX-Code

\series bold
return
\series default
 s
\end_layout

\begin_layout LyX-Code
// The Big-O is O(n)
\end_layout

\begin_layout LyX-Code
// Running time function is 2(n - 1) + 1 //
\end_layout

\begin_layout LyX-Code
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
Algorithm
\series default
 Ex2(A):
\end_layout

\begin_layout LyX-Code

\series bold
  Input
\series default
: An array A storing 
\begin_inset Formula $n\geq1$
\end_inset

 integers.
\end_layout

\begin_layout LyX-Code

\series bold
  Output
\series default
: The sum of the elements at even positions in A.
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $s\leftarrow A[0]$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
for
\series default
 
\begin_inset Formula $i\leftarrow2$
\end_inset

 
\series bold
to
\series default
 
\begin_inset Formula $n-1$
\end_inset

 
\series bold
by 
\series default
increments of 2
\series bold
 do
\end_layout

\begin_layout LyX-Code
  
\begin_inset Formula $s\leftarrow s+A[i]$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
end for
\end_layout

\begin_layout LyX-Code

\series bold
return
\series default
 
\begin_inset Formula $s$
\end_inset


\end_layout

\begin_layout LyX-Code
// The Big-O is O(n / 2) = O(n)
\end_layout

\begin_layout LyX-Code
// Running time function is 2(n / 2) + 2
\end_layout

\begin_layout LyX-Code
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
Algorithm
\series default
 Ex3(A):
\end_layout

\begin_layout LyX-Code
   
\series bold
Input
\series default
: An array A storing 
\begin_inset Formula $n\geq1$
\end_inset

 integers.
\end_layout

\begin_layout LyX-Code

\series bold
   Output
\series default
: The sum of the partial sums in A.
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $s\leftarrow0$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
for
\series default
 
\begin_inset Formula $i\leftarrow0$
\end_inset

  
\series bold
to
\series default
 
\begin_inset Formula $n-1$
\end_inset

 
\series bold
do
\end_layout

\begin_layout LyX-Code
   
\begin_inset Formula $s\leftarrow s+A[0]$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
   for
\series default
 
\begin_inset Formula $j\leftarrow1$
\end_inset

 
\series bold
to
\series default
 
\begin_inset Formula $i$
\end_inset

 
\series bold
do
\end_layout

\begin_layout LyX-Code
     
\begin_inset Formula $s\leftarrow s+A[j]$
\end_inset


\end_layout

\begin_layout LyX-Code
   
\series bold
end for
\end_layout

\begin_layout LyX-Code

\series bold
end for
\end_layout

\begin_layout LyX-Code

\series bold
return
\series default
 
\begin_inset Formula $s$
\end_inset


\end_layout

\begin_layout LyX-Code
// The Big-O is O(2n(2n + 1) / 2 + 2) = O(n ^ 2)
\end_layout

\begin_layout LyX-Code
// Running time function is 2n(2n + 1) / 2 + 2
\end_layout

\begin_layout LyX-Code
\begin_inset VSpace vfill
\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
Algorithm
\series default
 Ex4(A):
\end_layout

\begin_layout LyX-Code
   
\series bold
Input
\series default
: An array A storing 
\begin_inset Formula $n\geq1$
\end_inset

 integers.
\end_layout

\begin_layout LyX-Code

\series bold
   Output
\series default
: The sum of the partial sums in A.
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $t\leftarrow A[0]$
\end_inset


\end_layout

\begin_layout LyX-Code
\begin_inset Formula $s\leftarrow A[0]$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
for
\series default
 
\begin_inset Formula $i\leftarrow1$
\end_inset

 
\series bold
to
\series default
 
\begin_inset Formula $n-1$
\end_inset

 
\series bold
do
\series default
 
\end_layout

\begin_layout LyX-Code
   
\begin_inset Formula $s\leftarrow s+A[i]$
\end_inset


\end_layout

\begin_layout LyX-Code
   
\begin_inset Formula $t\leftarrow t+s$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
end for
\end_layout

\begin_layout LyX-Code

\series bold
return
\series default
 
\begin_inset Formula $t$
\end_inset


\end_layout

\begin_layout LyX-Code
// The Big-O is O(n)
\end_layout

\begin_layout LyX-Code
// Running time function is 4(n - 1) + 3
\end_layout

\begin_layout LyX-Code
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
Algorithm
\series default
 Ex5(A, B):
\end_layout

\begin_layout LyX-Code
   
\series bold
Input
\series default
: Arrays A and B storing 
\begin_inset Formula $n\geq1$
\end_inset

 integers.
\end_layout

\begin_layout LyX-Code

\series bold
   Output
\series default
: The number of elements in B equal to the partial sums in A.
\end_layout

\begin_layout LyX-Code
\begin_inset Formula $c\leftarrow0$
\end_inset

 //
\size small
counter
\end_layout

\begin_layout LyX-Code

\series bold
for
\series default
 
\begin_inset Formula $i\leftarrow0$
\end_inset

 
\series bold
to
\series default
 
\begin_inset Formula $n-1$
\end_inset

 
\series bold
do
\series default
 
\end_layout

\begin_layout LyX-Code
   
\begin_inset Formula $s\leftarrow0$
\end_inset

 //
\size small
\emph on
partial sum
\end_layout

\begin_layout LyX-Code

\series bold
   for
\series default
 
\begin_inset Formula $j\leftarrow0$
\end_inset

 
\series bold
to
\series default
 
\begin_inset Formula $n-1$
\end_inset

 
\series bold
do
\end_layout

\begin_layout LyX-Code
      
\begin_inset Formula $s\leftarrow s+A[0]$
\end_inset


\end_layout

\begin_layout LyX-Code

\series bold
      for
\series default
 
\begin_inset Formula $k\leftarrow1$
\end_inset

 
\series bold
to
\series default
 
\begin_inset Formula $j$
\end_inset

 
\series bold
do
\end_layout

\begin_layout LyX-Code
         
\begin_inset Formula $s\leftarrow s+A[k]$
\end_inset


\end_layout

\begin_layout LyX-Code
      
\series bold
end for
\end_layout

\begin_layout LyX-Code
   
\series bold
end for
\end_layout

\begin_layout LyX-Code
   
\series bold
if
\series default
 
\begin_inset Formula $B[i]=s$
\end_inset

 
\series bold
then
\end_layout

\begin_layout LyX-Code
      
\begin_inset Formula $c\leftarrow c+1$
\end_inset


\end_layout

\begin_layout LyX-Code
   
\series bold
end if
\end_layout

\begin_layout LyX-Code

\series bold
end for
\end_layout

\begin_layout LyX-Code

\series bold
return
\series default
 
\begin_inset Formula $c$
\end_inset


\end_layout

\begin_layout LyX-Code
// The Big-O is O(n^3)
\end_layout

\begin_layout LyX-Code
// Running time function is n * 2n * 2 (2n + 1) / 2 + 3
\end_layout

\begin_layout LyX-Code
if statement: 3
\end_layout

\begin_layout LyX-Code
first for loop: n
\end_layout

\begin_layout LyX-Code
second for loop: 2n
\end_layout

\begin_layout LyX-Code
third for loop: (2n + 1) / 2
\end_layout

\begin_layout LyX-Code
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout LyX-Code

\end_layout

\end_deeper
\end_body
\end_document
